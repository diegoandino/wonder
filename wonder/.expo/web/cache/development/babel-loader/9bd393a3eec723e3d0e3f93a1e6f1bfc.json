{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { makeRedirectUri, useAuthRequest } from 'expo-auth-session';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport UserModal from \"./UserModal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar scopes = ['user-read-playback-state', 'user-read-currently-playing', 'user-read-email', 'user-read-private', 'user-library-read', 'user-top-read', 'user-read-playback-position', 'user-read-recently-played'];\nvar discovery = {\n  authorizationEndpoint: 'https://accounts.spotify.com/authorize',\n  tokenEndpoint: 'https://accounts.spotify.com/api/token'\n};\n\nvar getUser = function getUser() {\n  return fetch('http://10.100.1.141:3000/get_me').then(function (res) {\n    return res.json();\n  });\n};\n\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useAuthRequest = useAuthRequest({\n    clientId: 'ebd339cf6bc9490cb2513694d338c0c8',\n    clientSecret: 'be387a78301d46f98b4ca6b937db61c0',\n    scopes: scopes,\n    usePKCE: false,\n    redirectUri: makeRedirectUri({\n      scheme: 'com.diegoandino.wonder'\n    })\n  }, discovery),\n      _useAuthRequest2 = _slicedToArray(_useAuthRequest, 3),\n      req = _useAuthRequest2[0],\n      res = _useAuthRequest2[1],\n      promptAsync = _useAuthRequest2[2];\n\n  var loggedIn = false;\n  useEffect(function () {\n    if ((res == null ? void 0 : res.type) === 'success') {\n      loggedIn = true;\n      var data = res.params;\n      setStoreCode(data['code']);\n      fetch('http://10.100.1.141:3000/code', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          code: data['code']\n        })\n      }).catch(function (err) {\n        return console.log('Fetch Error: ', err);\n      });\n      navigation.navigate('Map');\n    }\n  }, [res]);\n  useEffect(function () {\n    getUser().then(function (data) {\n      return setUser(data);\n    });\n  }, []);\n  useEffect(function () {\n    if (user != null) {\n      var username = user.uri.replace('spotify:user:', '');\n      setStoreUsername(username);\n      fetch('http://10.100.1.141:8080/login', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: username,\n          location: {\n            latitude: 0,\n            longitude: 0\n          },\n          logged_in: loggedIn\n        })\n      }).catch(function (err) {\n        return console.log('Fetch Error: ', err);\n      });\n    }\n  });\n\n  var setStoreCode = function () {\n    var _ref2 = _asyncToGenerator(function* (code) {\n      try {\n        yield AsyncStorage.setItem('@code', code);\n      } catch (e) {\n        console.log('Error: ', e);\n      }\n    });\n\n    return function setStoreCode(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var setStoreUsername = function () {\n    var _ref3 = _asyncToGenerator(function* (username) {\n      try {\n        yield AsyncStorage.setItem('@username', username);\n      } catch (e) {\n        console.log('Error: ', e);\n      }\n    });\n\n    return function setStoreUsername(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Button, {\n      title: \"Login With Spotify\",\n      onPress: function onPress() {\n        return promptAsync();\n      }\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["useEffect","useState","makeRedirectUri","useAuthRequest","AsyncStorage","UserModal","scopes","discovery","authorizationEndpoint","tokenEndpoint","getUser","fetch","then","res","json","Login","navigation","user","setUser","clientId","clientSecret","usePKCE","redirectUri","scheme","req","promptAsync","loggedIn","type","data","params","setStoreCode","method","headers","Accept","body","JSON","stringify","code","catch","err","console","log","navigate","username","uri","replace","setStoreUsername","location","latitude","longitude","logged_in","setItem","e","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["C:/Users/andin/OneDrive/Documents/Dev/personal/Wonder/wonder/components/Login.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { StyleSheet, View, Button } from \"react-native\";\r\nimport { makeRedirectUri, useAuthRequest } from 'expo-auth-session';\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport UserModal from \"./UserModal\";\r\n\r\nconst scopes = [\r\n    'user-read-playback-state',\r\n    'user-read-currently-playing',\r\n    'user-read-email',\r\n    'user-read-private',\r\n    'user-library-read',\r\n    'user-top-read',\r\n    'user-read-playback-position',\r\n    'user-read-recently-played',\r\n];\r\n\r\nconst discovery = {\r\n    authorizationEndpoint: 'https://accounts.spotify.com/authorize',\r\n    tokenEndpoint: 'https://accounts.spotify.com/api/token',\r\n};\r\n\r\nconst getUser = () => fetch('http://10.100.1.141:3000/get_me').then(res => res.json());\r\n\r\nexport default function Login({ navigation }) {\r\n    const[user, setUser] = useState(null);\r\n    const [req, res, promptAsync] = useAuthRequest({\r\n        clientId: 'ebd339cf6bc9490cb2513694d338c0c8',\r\n        clientSecret: 'be387a78301d46f98b4ca6b937db61c0',\r\n        scopes: scopes,\r\n        usePKCE: false,\r\n        redirectUri: makeRedirectUri({ scheme: 'com.diegoandino.wonder' }),\r\n    }, discovery);\r\n    \r\n    let loggedIn = false;\r\n    useEffect(() => {\r\n        if (res?.type === 'success') {\r\n            loggedIn = true;\r\n            const data = res.params;\r\n            setStoreCode(data['code']);\r\n            // Send code to server to later get access token\r\n            fetch('http://10.100.1.141:3000/code', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    },\r\n                body: JSON.stringify({ code: data['code'] })\r\n            }).catch(err => console.log('Fetch Error: ', err));\r\n            navigation.navigate('Map');\r\n        }\r\n    }, [res]);\r\n\r\n    useEffect(() => {\r\n        getUser().then(data => setUser(data));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Make a post request to server to /login to add user to database\r\n        if (user != null) {\r\n            const username = user.uri.replace('spotify:user:', '');\r\n            setStoreUsername(username);\r\n            fetch('http://10.100.1.141:8080/login', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        Accept: 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        },\r\n                    body: JSON.stringify({\r\n                            username: username,\r\n                            location: {\r\n                                latitude: 0,\r\n                                longitude: 0,\r\n                            },\r\n                            logged_in: loggedIn,\r\n                        })\r\n            }).catch(err => console.log('Fetch Error: ', err));\r\n        }\r\n    });\r\n    \r\n    const setStoreCode = async (code) => {\r\n        try {\r\n          await AsyncStorage.setItem('@code', code)\r\n        } catch (e) {\r\n          console.log('Error: ', e)\r\n        }\r\n    }\r\n\r\n    const setStoreUsername = async (username) => {\r\n        try {\r\n            await AsyncStorage.setItem('@username', username)\r\n        } catch (e) {\r\n            console.log('Error: ', e)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Button title=\"Login With Spotify\" onPress={ () => promptAsync() }></Button>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    }\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}